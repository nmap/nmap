-- pcp-version.nse

description = [[
SGI Performance Co-Pilot (PCP) Service Version Detection
More information down to memory mapping of processes can be gained using the PCP/pminfo clients.
]]

-- how to install this script:
-- copy pcp-version.nse into /usr/shar/nmap/scripts
-- then run "sudo nmap --script-updatedb"


---
-- @output
-- Host script results:
-- |_ pcp-version: 3.6.4

local shortport = require "shortport"

author = "Freakyclown"
license = "Same as Nmap--See http://nmap.org/book/man-legal.html"
categories = {"default", "safe","version"}

portrule = shortport.port_or_service(44321, "SGI Performance Co-Pilot", {"tcp"} )


action = function(host, port)
	local result, socket, try, catch
        socket = nmap.new_socket()
        catch = function()
                socket:close()
        end

        try = nmap.new_try(catch)
        try(socket:connect(host, port))
	tarb = string.char(0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x70, 0x0c, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x00, 0x01, 
			    0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 
			    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x70, 0x6d, 0x63, 0x64, 0x2e, 0x76, 0x65, 0x72, 
			    0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x70, 0x0e, 0x00, 0x00, 0x00, 0x00, 
			    0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 
			    0x70, 0x6d, 0x63, 0x64, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x1c, 
			    0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
			    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x70, 0x03, 
			    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
			    0x00, 0x00, 0x00, 0x01, 0x00, 0x80, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x70, 0x04, 
			    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x07  )
	try(socket:send(tarb))
        result = try(socket:receive_bytes(10000))
        
	socket:close()
	return(result:sub(133,137))
	
end
